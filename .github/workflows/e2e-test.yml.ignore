name: E2E Tests
# TODO: エラーが発生するため、一旦保留
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      test_type:
        description: "Test type to run"
        required: false
        default: "all"
        type: choice
        options:
          - all
          - login
          - create
          - edit
          - full

env:
  FLUTTER_VERSION: "3.24.5"
  JAVA_VERSION: "17"
  DEVICE_ID: ""

jobs:
  e2e-ios:
    name: E2E Tests (iOS)
    runs-on: macos-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - name: Setup FVM
        run: |
          dart pub global activate fvm
          fvm install ${{ env.FLUTTER_VERSION }}
          fvm use ${{ env.FLUTTER_VERSION }}

      - name: Install Maestro
        run: |
          curl -Ls https://get.maestro.mobile.dev | bash
          echo "${HOME}/.maestro/bin" >> $GITHUB_PATH

      - name: Setup iOS Simulator
        run: |
          # iOSシミュレーターのリストを取得
          xcrun simctl list devices

          # iPhone 15 Proシミュレーターを起動
          DEVICE_ID=$(xcrun simctl list devices | grep "iPhone 15 Pro" | grep -v "Max" | head -1 | awk -F'[()]' '{print $2}')
          if [ -z "$DEVICE_ID" ]; then
            echo "Creating iPhone 15 Pro simulator..."
            DEVICE_ID=$(xcrun simctl create "iPhone 15 Pro" "iPhone 15 Pro")
          fi

          echo "DEVICE_ID=$DEVICE_ID" >> $GITHUB_ENV
          xcrun simctl boot $DEVICE_ID || true

          # シミュレーターの起動を待つ
          sleep 10

      - name: Build Flutter app (iOS)
        working-directory: app
        run: |
          fvm flutter pub get
          fvm flutter build ios --debug --flavor dev --simulator --no-codesign

      - name: Install app on Simulator
        run: |
          APP_PATH="app/build/ios/iphonesimulator/Runner.app"
          xcrun simctl install ${{ env.DEVICE_ID }} "$APP_PATH"

      - name: Run E2E tests
        run: |
          export MAESTRO_PLATFORM=ios
          export MAESTRO_DEVICE_ID=${{ env.DEVICE_ID }}

          # テストタイプに応じて実行
          TEST_TYPE="${{ github.event.inputs.test_type || 'all' }}"

          case $TEST_TYPE in
            login)
              bash _scripts/run_maestro_tests.sh --ios --test login
              ;;
            create)
              bash _scripts/run_maestro_tests.sh --ios --test create
              ;;
            edit)
              bash _scripts/run_maestro_tests.sh --ios --test edit
              ;;
            full)
              bash _scripts/run_maestro_tests.sh --ios --test e2e
              ;;
            *)
              bash _scripts/run_maestro_tests.sh --ios
              ;;
          esac

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: maestro-ios-artifacts
          path: |
            .maestro/reports/
            ~/.maestro/tests/

      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ios-failure-screenshots
          path: |
            .maestro/screenshots/

  e2e-android:
    name: E2E Tests (Android)
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - name: Setup FVM
        run: |
          dart pub global activate fvm
          fvm install ${{ env.FLUTTER_VERSION }}
          fvm use ${{ env.FLUTTER_VERSION }}

      - name: Install Maestro
        run: |
          curl -Ls https://get.maestro.mobile.dev | bash
          echo "${HOME}/.maestro/bin" >> $GITHUB_PATH

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-33-default

      - name: Create AVD and start emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 33
          target: google_apis
          arch: x86_64
          profile: Nexus 6
          avd-name: test
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: echo "Emulator started"

      - name: Build Flutter app (Android)
        working-directory: app
        run: |
          fvm flutter pub get
          fvm flutter build apk --debug --flavor dev

      - name: Install app on Emulator
        run: |
          adb install app/build/app/outputs/flutter-apk/app-dev-debug.apk

      - name: Run E2E tests
        run: |
          export MAESTRO_PLATFORM=android

          # テストタイプに応じて実行
          TEST_TYPE="${{ github.event.inputs.test_type || 'all' }}"

          case $TEST_TYPE in
            login)
              bash _scripts/run_maestro_tests.sh --android --test login
              ;;
            create)
              bash _scripts/run_maestro_tests.sh --android --test create
              ;;
            edit)
              bash _scripts/run_maestro_tests.sh --android --test edit
              ;;
            full)
              bash _scripts/run_maestro_tests.sh --android --test e2e
              ;;
            *)
              bash _scripts/run_maestro_tests.sh --android
              ;;
          esac

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: maestro-android-artifacts
          path: |
            .maestro/reports/
            ~/.maestro/tests/

      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: android-failure-screenshots
          path: |
            .maestro/screenshots/

  test-report:
    name: Test Report
    runs-on: ubuntu-latest
    needs: [e2e-ios, e2e-android]
    if: always()

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Generate test report
        run: |
          echo "## E2E Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # iOS結果
          if [ -d "maestro-ios-artifacts" ]; then
            echo "### iOS Tests" >> $GITHUB_STEP_SUMMARY
            if [ -f "maestro-ios-artifacts/.maestro/reports/summary.txt" ]; then
              cat "maestro-ios-artifacts/.maestro/reports/summary.txt" >> $GITHUB_STEP_SUMMARY
            else
              echo "✅ Passed" >> $GITHUB_STEP_SUMMARY
            fi
            echo "" >> $GITHUB_STEP_SUMMARY
          fi

          # Android結果
          if [ -d "maestro-android-artifacts" ]; then
            echo "### Android Tests" >> $GITHUB_STEP_SUMMARY
            if [ -f "maestro-android-artifacts/.maestro/reports/summary.txt" ]; then
              cat "maestro-android-artifacts/.maestro/reports/summary.txt" >> $GITHUB_STEP_SUMMARY
            else
              echo "✅ Passed" >> $GITHUB_STEP_SUMMARY
            fi
            echo "" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let comment = '## 🧪 E2E Test Results\n\n';

            // テスト結果をまとめる
            comment += '| Platform | Status |\n';
            comment += '|----------|--------|\n';
            comment += '| iOS | ${{ needs.e2e-ios.result == 'success' && '✅ Passed' || '❌ Failed' }} |\n';
            comment += '| Android | ${{ needs.e2e-android.result == 'success' && '✅ Passed' || '❌ Failed' }} |\n';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
